<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="projects-page.xsl"?>
<projects>
    <project entry="sts-viewer/index.html">
        <name>NISO STS Viewer</name>
        <line>Preview your NISO STS document.</line>
        <description>
            <p>NISO STS is an XML-based documentary format being adopted at NIST and more widely as an interchange format supporting the publication, exchange, re-use and sustainable (accessible) archiving of documentation relating to standards and guidelines. As a documentary format it is both richer and more rigorous than HTML.</p>
            <p>Use this Previewer to see how a NISO STS-tagged document <i>might</i> appear in display (that is, in your browser, cast dynamically from its source tagging).</p>
        </description>
    </project>
    <project entry="directory.xml">
        <name>Reflection</name>
        <line>Pointing back to this portal.</line>
        <description>
            <p>The directory to demonstrations on this site, loaded into your browser as XML.</p>
            <p><i>View Source</i> to see the XML source from which the page is produced.</p>
            <p><i>IF</i> you are so lucky ... reports are that this link freezes in at least one browser (just close the page).</p>
        </description>
    </project>
    <project entry="index.html">
        <name>Dynamic index</name>
        <description>
            <p>This directory is loaded dynamically into the index page, at user request. Uses the same XSLT as for <a href="directory.xml">the directory pushed as XML</a>.</p>
        </description>
    </project>
    <project status="planned">
        <name>STS Fitness Checking</name>
        <line>How does the STS submission look?</line>
        <description>
            <p>An XSLT can render a document for display; it can also discover and signal where known issues are detected or
                rules are not satisfied.</p>
        </description>
    </project>
    <project status="planned">
        <name>Site templating</name>
        <line>Static site generator, old school</line>
        <description>
            <p>A NodeJS CL tool to read an HTML file and deliver a transformed HTML file would be the basis for a static site generator in Node JS + XSLT 1.0.</p>
            <p>Then make an application of this for site templating.</p>
            <p>Deploy as either page setup or CI/CD (push) step (or both)?</p>
        </description>
    </project>
    <project entry="json-mixer/json-reader.html" status="underway">
        <name>JSON Reader</name>
        <description>
            <p>Load JSON and spill it onto the page, as HTML.</p>
        </description>
    </project>
    <project status="planned">
        <name>Load and Run</name>
        <description>
            <p>Load your XSLT 1.0, then your XML. Inspired by D Carlisle.</p>
        </description>
    </project>
    <project status="planned">
        <name>Excel Drill</name>
        <description>
            <p>Load your Excel spreadsheet, pick your worksheet, map it into a table, save it.</p>
            <p>Save as HTML or OSCAL.</p>
            <p>Will require (un)zip functionality, resource wrapping (or other runtime interface with XSLT engine)</p>
        </description>
    </project>
    <project status="planned">
        <name>Accessibility checklist &amp; diagnostic</name>
        <description>
            <p>A dynamic form application saving a checklist of accessibility issues in
                publishing.</p>
            <p>Can be hotwired to provide for automated checks of accessible documents. (HTML?)</p>
            <ul>
                <li><code>/*/@lang</code></li>
                <li>Correctly nested headers - no header may be directly followed by another more than one level deeper</li>
                <li>Only one header per section|div</li>
                <li>Tables?</li>
                <li><code>class</code> markup</li>
                <li>Labeling form fields</li>
                <li><code>alt-text</code> markup on images</li>
                <li>Figures (<code>&lt;figure></code>) and figure usage (captions etc); images
                    outside (nominal) figures</li>
                <li>Color check / preview? (links)</li>
                <li>Accessibility audits (links)</li>
            </ul>
        </description>
        <link href="https://www.w3.org/WAI/fundamentals/">W3C Web Accessibility
                Initiative</link>
    </project>
</projects>
